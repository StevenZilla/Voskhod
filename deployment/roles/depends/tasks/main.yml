---
- name: Create deb-package directory
  file:
    path: "{{ home_dir }}/deployment/tr-archive-deb-package"
    state: directory
    owner: "{{ ansible_user }}"

- name: Unzip backend directory
  unarchive:
    src: "{{ home_dir }}/sources/{{ backend }}.zip"
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package"
  become: true

- name: Unzip frontend directory
  unarchive:
    src: "{{ home_dir }}/sources/{{ frontend }}.zip"
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package"
  become: true

- name: Unzip notification directory
  unarchive:
    src: "{{ home_dir }}/sources/{{ notification }}.zip"
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package"
  become: true

- name: Unzip worker directory
  unarchive:
    src: "{{ home_dir }}/sources/{{ worker }}.zip"
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package"
  become: true

- name: Unzip public API directory
  unarchive:
    src: "{{ home_dir }}/sources/{{ public_api }}.zip"
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package"
  become: true

- name: "create backend lock-file"
  template:
    src: back_composer.j2
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package/{{ backend }}/composer.lock"
    mode: '775'

- name: "copy backend sources"
  unarchive: 
    src: backend.zip
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package/{{ backend }}"
    mode: '775'

- name: "composer install backend"
  shell: |
    cd "{{ home_dir }}/deployment/tr-archive-deb-package/{{ backend }}"
    y | composer install

- name: "create public API lock-file"
  template:
    src: public_composer.j2
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package/{{ public_api }}/composer.lock"
    mode: '775'

- name: "copy public API sources"
  unarchive: 
    src: public.zip
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package/{{ public_api }}"
    mode: '775'

- name: "composer install public API"
  shell: |
    cd "{{ home_dir }}/deployment/tr-archive-deb-package/{{ public_api }}"
    y | composer install

- name: "create notification lock-file"
  template:
    src: notification_composer.j2
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package/{{ notification }}/composer.lock"
    mode: '775'

- name: "copy notification sources"
  unarchive: 
    src: notification.zip
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package/{{ notification }}"
    mode: '775'

- name: "composer install notification"
  shell: |
    cd "{{ home_dir }}/deployment/tr-archive-deb-package/{{ notification }}"
    y | composer install

- name: "npm install and build frontend"
  shell: |
    cd "{{ home_dir }}/deployment/tr-archive-deb-package/{{ frontend }}"
    npm install
    npm run build-v-dev

- name: "copy debinstall directory"
  shell: cp -r "{{ home_dir }}/deployment/debinstall" "{{ home_dir }}/deployment/tr-archive-deb-package/debinstall"

- name: "generating a script for creating a deb package"
  template:
    src: redeb.j2
    dest: "{{ home_dir }}/deployment/tr-archive-deb-package/debinstall/redeb.sh"
    mode: '777'

- name: "build deb package"
  shell: |
    cd "{{ home_dir }}/deployment/tr-archive-deb-package/debinstall"
    chmod +x ./redeb.sh
    ./redeb.sh

- name: "replace deb package to ansible workdir"
  shell: mv "{{ home_dir }}/deployment/tr-archive-deb-package/debinstall/tr-archive.deb" "{{ home_dir }}/deployment/"

- name: "remove tmp debinstall directory"
  shell: rm -rf "{{ home_dir }}/deployment/tr-archive-deb-package/debinstall"

