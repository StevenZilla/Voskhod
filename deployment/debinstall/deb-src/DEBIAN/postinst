#!/bin/bash

echo "Сonfiguration apache2"
sed -ri '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride all/' /etc/apache2/apache2.conf
sed -ri 's/# AstraMode on/AstraMode off/' /etc/apache2/apache2.conf
sed -ri "s#DocumentRoot /var/www/html#DocumentRoot /var/www/tr-archive#" /etc/apache2/sites-available/000-default.conf
a2enmod rewrite

echo "Сonfiguration php7.3"
sed -ri "s/upload_max_filesize\s*=\s*[0-9]+M/upload_max_filesize=999M/" /etc/php/7.3/apache2/php.ini
sed -ri "s/memory_limit\s*=\s*[0-9]+M/memory_limit=1G/" /etc/php/7.3/apache2/php.ini
sed -ri "s/post_max_size\s*=\s*[0-9]+M/post_max_size=1G/" /etc/php/7.3/apache2/php.ini

echo "Restart apache2"
service apache2 restart

echo "Сonfiguration postgresql"
sudo -u postgres psql -c "ALTER ROLE postgres WITH password '12345'"
sudo -u postgres psql -c 'CREATE DATABASE "back";'
sudo -u postgres psql -c 'CREATE DATABASE "notify";'
PGPASSWORD=12345 psql -h 127.0.0.1 --username "postgres" -d "back" -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
PGPASSWORD=12345 psql -h 127.0.0.1 --username "postgres" -d "back" -c "CREATE EXTENSION IF NOT EXISTS pg_stat_statements;"
PGPASSWORD=12345 psql -h 127.0.0.1 --username "postgres" -d "back" -c "CREATE EXTENSION IF NOT EXISTS LTREE;"
PGPASSWORD=12345 psql -h 127.0.0.1 --username "postgres" -d "notify" -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
PGPASSWORD=12345 psql -h 127.0.0.1 --username "postgres" -d "notify" -c "CREATE EXTENSION IF NOT EXISTS pg_stat_statements;"
PGPASSWORD=12345 psql -h 127.0.0.1 --username "postgres" -d "notify" -c "CREATE EXTENSION IF NOT EXISTS LTREE;"

echo "Сonfiguration back"
cd /var/www/tr-archive/trarchive-api-application/;
sudo chown -R www-data:www-data ../trarchive-api-application;
sudo chmod -R 775 ../trarchive-api-application;
#sudo chmod -R 777 ../trarchive-api-application/media;
sudo -u www-data php artisan optimize:clear;
DB_CONNECTION=pgsql
DB_HOST=postgres
DB_PORT=5432
DB_DATABASE=back
DB_USERNAME=postgres
DB_PASSWORD=12345
DB_SCHEMA=public
sudo -u www-data php artisan migrate --force;
sudo -u www-data php artisan key:generate;
sudo -u www-data php artisan version_product:set;
#sudo -u www-data php artisan user:insert admin hESOYAM314 --is_superuser=true;
sudo -u www-data php artisan fix:route;
sudo chown -R www-data:www-data ../trarchive-api-application

echo "Сonfiguration notify"
sudo chown -R www-data:www-data /var/www/tr-archive/trarchive-notification;
sudo chmod -R 775 /var/www/tr-archive/trarchive-notification;

echo "Сonfiguration public"
sudo chown -R www-data:www-data /var/www/tr-archive/trarchivepublic;
sudo chmod -R 775 /var/www/tr-archive/trarchivepublic;

#echo "Create directory medo"
#if [ -d "/home/medo" ]
#then
#    echo "Directory /home/medo exists"
#else
#    mkdir /home/medo /home/medo/in /home/medo/out
#    chown -R www-data:www-data /home/medo
#    chmod -R 777 /home/medo
#fi

echo "Create redis link"
if [ -d "/usr/share/php/Predis/PredisLink" ]
then
    echo "Predis link exists"
else
    cd /usr/share/php/Predis && sudo ln -s /usr/share/php/php-nrk-predis/ PredisLink
fi

echo "Create directory .config"
if [ -d "/var/www/.config" ]
then
    echo "Directory /var/www/.config exists"
else
    mkdir /var/www/.config
    chmod 700 /var/www/.config
    chown www-data:root /var/www/.config
fi

echo "Create directory .cache"
if [ -d "/var/www/.config" ]
then
    echo "Directory /var/www/.config exists"
else
    mkdir /var/www/.cache/
    chown www-data:root /var/www/.cache/
    chmod 700 /var/www/.cache/
fi

#echo "Add cron command"
#sudo echo "*/1 *   * * *   www-data /usr/bin/php /var/www/tr-archive/trarchive-api-application/artisan schedule:run >> /dev/null 2>&1" >> /etc/crontab
sudo systemctl daemon-reload
sudo systemctl start trarchive-api-application
sudo systemctl start trarchive-monitoring
sudo systemctl start trarchive-notification
sudo systemctl start trarchive-stream
sudo systemctl enable trarchive-api-application
sudo systemctl enable trarchive-monitoring
sudo systemctl enable trarchive-notification
sudo systemctl enable trarchive-stream
